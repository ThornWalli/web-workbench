import{S as O,P as T,b as I,c as A,d as R,e as _,F as b,D as p,A as K}from"./ehWpBOkw.js";import{I as o,r as u,K as D,a as g,b as Y}from"./B1Xgq4rl.js";import{c as B}from"./Br3o2oUw.js";import{a as h}from"./Ds-AH-SM.js";import{d as P,m as w,a as t,b as l}from"./ClLpnmyR.js";import{U as H}from"./CoWiVqj-.js";import{S as E}from"./B9nPFJJ2.js";import{K as m}from"./B4rpyJsK.js";const j={[o.AM]:K,[o.DUO]:p,[o.FM]:b,[o.MEMBRANE]:_,[o.METAL]:R,[o.MONO]:A,[o.PLUCK]:I,[o.POLY]:T,[o.SYNTH]:O};function z(S=o.SYNTH){return j[S]}const X=P(({core:S,mainWindow:s,parentWindow:y,preserveContextMenu:i,model:a,trackModel:c})=>{function N(){return(y||s).close()}const f=a[w.SYNTHESIZER_PROJECT],r=c&&c[w.SYNTHESIZER_TRACK];return[new t({title:"Synthesizer",items:[new t({hotKey:{alt:!0,code:m.KEY_I,title:"I"},title:"Info",async action(){return a.actions?.openInfo()}}),new E,new t({title:"Debug",items:[new t({title:"Notes",async action(){a.actions?.openDebugNotes&&(i(!0),await(await a.actions.openDebugNotes()).awaitClose(),i(!1),s.focus())}}),new t({title:"Midi",async action(){a.actions?.openDebugMidi&&(i(!0),await(await a.actions.openDebugMidi()).awaitClose(),i(!1),s.focus())}}),new t({title:"Timeline",async action(){a.actions?.openDebugTimeline&&(i(!0),await(await a.actions.openDebugTimeline()).awaitClose(),i(!1),s.focus())}})]}),new E,new t({title:"Close",action:N})]}),...c?[]:[new t({title:"Project",items:[new t({title:"New…",action:async()=>{a.actions&&(i(!0),await a.actions.newProject(),i(!1),s.focus())}}),new t({title:"Edit Name…",action:async()=>{i(!0);const e=await u(S,"Project renaming:",f.name);e&&(f.name=e),i(!1),s.focus()}}),new t({title:"Open…",hotKey:{alt:!0,code:m.KEY_O,title:"O"},action:async()=>{await a.actions?.openProject()}}),new t({title:"Save…",hotKey:{alt:!0,code:m.KEY_S,title:"S"},action:async()=>await a.actions?.saveProject()}),new E,new H({title:"Import… (JSON)",hotKey:{alt:!0,shift:!0,code:m.KEY_I,title:"I"},async action({files:e}){return await a.actions?.importProject(e[0])}}),new t({title:"Export (JSON)",action:async()=>await a.actions?.exportProject()})]}),new t({title:"Track",items:[new t({title:"New…",action:async()=>{a.actions&&(i(!0),await a.actions.newTrack(),i(!1),s.focus())}}),new E,new t({title:"Clear",async action(){a.actions&&(i(!0),await a.actions.clearTracks(),i(!1),s.focus())}})]})],...c&&[new t({title:"Track Options",items:[new t({type:l.CHECKBOX,title:"Show Note Labels",name:w.SYNTHESIZER_TRACK_SHOW_NOTE_LABELS,model:c}),new t({type:l.CHECKBOX,title:"Show Keyboard",name:w.SYNTHESIZER_TRACK_SHOW_KEYBOARD,model:c}),new t({title:"Keyboard Size",items:Object.entries(D).map(([e,n])=>new t({type:l.RADIO,title:n,model:c,name:w.SYNTHESIZER_TRACK_KEYBOARD_SIZE,value:e}))}),new t({title:"Keyboard Alignment",items:Object.entries(g).map(([e,n])=>new t({type:l.RADIO,title:n,model:c,name:w.SYNTHESIZER_TRACK_KEYBOARD_ALIGN,value:e}))}),new E,new t({title:"Edit Name…",action:async()=>{i(!0);const e=await u(S,"Track renaming:",r.name);e&&(r.name=e,s.options.title=r.name),i(!1),s.focus()}}),new t({title:"Note Count",items:Object.entries(Y).map(([e,n])=>new t({type:l.RADIO,title:`${e} (${n})`,model:r,name:"noteCount",value:n}))}),new t({title:"Base Note",items:Object.entries(h()).map(([e,n])=>new t({type:l.RADIO,title:e,model:r,name:"baseNote",value:n}))}),new E,new t({title:"Beat Count",items:Array(9).fill({}).map((e,n)=>new t({type:l.RADIO,title:String(n+1),model:r,name:"beatCount",value:n+1}))})]})]||[],new t({title:"Options",items:[new t({title:`BPM (${a[w.SYNTHESIZER_BPM]})`,items:[30,60,120,240,480].map(e=>new t({type:l.RADIO,title:String(e),model:a,name:w.SYNTHESIZER_BPM,value:e}))})]}),...B({core:S})].filter(Boolean)});export{X as c,z as g};
