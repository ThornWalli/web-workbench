var N=Object.defineProperty;var R=(o,t,n)=>t in o?N(o,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[t]=n;var u=(o,t,n)=>R(o,typeof t!="symbol"?t+"":t,n);import{n as _,P as O,N as b,V as q,T as k,a as D}from"./CSdiJtxt.js";import{D as P}from"./Cu9sy-hF.js";import{T as j,c as K,d as C,e as B,f as Y}from"./DA6ZCcGd.js";import{I,_ as H,g as L,t as z,v as Z,z as $}from"./Dxp0y_AI.js";import{u as U,M as i}from"./BfMtXD3M.js";import{c as F}from"./C3BAJlb8.js";import{q as x}from"./lC_1MM6t.js";import{C as h,r as E}from"./DSQ0KJSq.js";class rt{constructor(t,n){u(this,"track");u(this,"playing",!1);u(this,"currentSequence");u(this,"autoplay");u(this,"instrument");u(this,"instruments",[]);u(this,"sequenceNoteIndex",{});u(this,"instrumentIndex",-1);const{autoplay:e}=n||{};if(!(t instanceof j))throw new Error("TrackPlayer requires a Track");this.track=t,this.autoplay=e!==void 0?e:!0}createInstrument(){var t;(t=this.instrument)==null||t.dispose(),this.instrument=A(this.track.type)}refresh(){const t=this.track.notes;return this.createSequence(t,()=>{console.log("complete"),this.clearSequence(),this.playing=!1}),t}play(){if(!this.track.type)throw new Error("TrackPlayer requires an instrument");return this.refresh(),this.autoplay&&(this.currentSequence.start(0),this.playing=!0),this.currentSequence}pause(){this.instruments.forEach(t=>t.context.transport.pause()),this.playing=!1}stop(){this.clearSequence(),this.playing=!1}restart(){this.stop(),this.play()}reset(){this.clearSequence(),this.stop(),this.track.notes=[]}destroy(){var t;(t=this.instrument)==null||t.dispose(),this.instruments.forEach(n=>n.dispose()),this.clearSequence()}triggerAttack(t){this.instrumentIndex++,this.getInstrument().triggerAttack(t)}triggerRelease(){this.getInstrument().triggerRelease(),this.instrumentIndex--}triggerAttackRelease(t){this.instrumentIndex++,console.log("triggerAttackRelease",this.instrumentIndex,t.getName(),t.getTime(),t.delay,(t.delay+t.toSeconds())*1e3),window.setTimeout(()=>{console.log("fertig"),this.instrumentIndex--},(t.delay+t.toSeconds())*1e3),this.getInstrument().triggerAttackRelease(t.getName(),t.getTime(),t.delay)}getInstrument(){return this.instrumentIndex>this.instruments.length-1&&this.instruments.push(A(this.track.type)),this.instruments[this.instrumentIndex]}createSequence(t,n){var e;this.currentSequence||((e=this.currentSequence)==null||e.dispose(),this.currentSequence=I(new V(t,(a,r,p,l)=>{console.log(a),this.triggerAttackRelease(a),this.sequenceNoteIndex={...this.sequenceNoteIndex,[Number(r)]:l[Number(p)].index},p===l.length-1&&delete this.sequenceNoteIndex[Number(r)]},n!==void 0?n:void 0)))}clearSequence(){var t;(t=this.currentSequence)==null||t.dispose(),this.currentSequence=null}}class V{constructor(t,n,e){u(this,"startTime",0);u(this,"sequenceMap",new Map);this.onTick=n,this.onComplete=e,this.notes=t}async start(t=0){const n=k;n.stop(),n.seconds=0,n.start(),this.startTime=_();const e=this.sequenceMap,a=Promise.all(Object.entries(W(this.notes)).map(([,r])=>{const p=r.map((l,y)=>{const m=`${y}_${l.getTime()}`;let{notes:s,part:c,complete:d}=e.get(m)||(()=>{const g=[];let f=0;const S=new P,T=new O((...w)=>{this.onTick(new b({delay:w[0],note:w[1],time:l.getTime()}),y,f,g),f++,f>T.length-1&&S.resolve()},[],l.getTime());return{notes:g,part:T,complete:S.promise}})();return e.set(m,{notes:s,part:c,complete:d}),c.add(l.delay,l.getName()),s.push(l),{notes:s,part:c,complete:d}});return Promise.all(p.map(({complete:l})=>l))}));return Array.from(e.values()).forEach(({part:r})=>{r.start(t)}),await a,this.onComplete(),a}pause(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.pause()})}cancel(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.cancel()})}stop(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.stop()})}dispose(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.dispose()})}}function A(o){const t=D[String(o)],n=new q(-100).toDestination(),e=new t().connect(n).toDestination();return I(e)}function W(o){return o.reduce((t,n)=>(t[n.delay]=t[n.delay]||[],t[n.delay].push(n),t),{})}const X={components:{AtomMarkdown:x},props:{model:{type:Object,required:!0}},setup(){return{windowContext:U()}},data(){return{content:["# Synthesizer","Simple synthesizer with notes view and midi api support.","",`Version: **0.1**  
Created by **Thorn-Welf Walli**`,"","Thanks to:","- [Tone.js](https://tonejs.github.io/)","- [WEBMIDI.js](https://webmidijs.org/)"].join(`
`)}}},G={class:"wb-disks-debug-synthesizer-info"};function J(o,t,n,e,a,r){const p=L("atom-markdown");return z(),Z("div",G,[$(p,{content:a.content},null,8,["content"])])}const Q=H(X,[["render",J],["__scopeId","data-v-b91ce108"]]),ct=({core:o,mainWindow:t,parentWindow:n,preserveContextMenu:e,model:a,trackModel:r})=>{const{windows:p}=o.modules;function l(){return(n||t).close()}const y=a[h.SYNTHESIZER_PROJECT],m=r&&r[h.SYNTHESIZER_TRACK];return[{title:"Synthesizer",items:[{hotKey:"I",keyCode:73,title:"Info",async action(){e(!0),await p.addWindow({title:"Info",component:Q,componentData:{model:a},options:{prompt:!1,scaleX:!1,scaleY:!1,scrollX:!1,scrollY:!1}},{group:"extras13Synthesizer"}).awaitClose(),e(!1),t.focus()}},{type:i.SEPARATOR},{title:"Debug",items:[{title:"Notes",async action(){e(!0);const{window:s}=a.actions.openDebugNotes();await s.awaitClose(),e(!1),t.focus()}},{title:"Midi",async action(){e(!0);const{window:s}=a.actions.openDebugMidi();await s.awaitClose(),e(!1),t.focus()}},{title:"Timeline",async action(){e(!0);const{window:s}=a.actions.openDebugTimeline();await s.awaitClose(),e(!1),t.focus()}}]},{type:i.SEPARATOR},{title:"Close",action:l}]},...r?[]:[{title:"Project",items:[{title:"New…",action:async()=>{e(!0),await a.actions.newProject(),e(!1),t.focus()}},{title:"Edit Name…",action:async()=>{e(!0);const s=await E(o,"Project renaming:",y.name);s&&(y.name=s),e(!1),t.focus()}},{title:"Open…",hotKey:"O",keyCode:79,action:async()=>{await a.actions.openProject()}},{title:"Save…",hotKey:"S",keyCode:83,action:async()=>await a.actions.saveProject()},{type:i.SEPARATOR},{title:"Import… (JSON)",hotKey:"S",keyCode:83,type:i.UPLOAD,async action(s){return await a.actions.importProject(s[0])}},{title:"Export (JSON)",action:async()=>await a.actions.exportProject()}]},{title:"Track",items:[{title:"New…",action:async()=>{e(!0),await a.actions.newTrack(),e(!1),t.focus()}},{type:i.SEPARATOR},{title:"Clear",async action(){e(!0),await a.actions.clearTracks(),e(!1),t.focus()}}]}],...r&&[{title:"Track Options",items:[{type:i.CHECKBOX,title:"Show Note Labels",name:h.SYNTHESIZER_TRACK_SHOW_NOTE_LABELS,model:r},{type:i.CHECKBOX,title:"Show Keyboard",name:h.SYNTHESIZER_TRACK_SHOW_KEYBOARD,model:r},{type:i.DEFAULT,title:"Keyboard Size",items:Object.entries(K()).map(([s,c])=>({type:i.RADIO,title:c,model:r,name:h.SYNTHESIZER_TRACK_KEYBOARD_SIZE,value:s}))},{type:i.DEFAULT,title:"Keyboard Alignment",items:Object.entries(C()).map(([s,c])=>({type:i.RADIO,title:c,model:r,name:h.SYNTHESIZER_TRACK_KEYBOARD_ALIGN,value:s}))},{type:i.SEPARATOR},{title:"Edit Name…",action:async()=>{e(!0);const s=await E(o,"Track renaming:",m.name);s&&(m.name=s,t.options.title=m.name),e(!1),t.focus()}},{type:i.DEFAULT,title:"Note Count",items:Object.entries(B()).map(([s,c])=>({type:i.RADIO,title:`${s} (${c})`,model:m,name:"noteCount",value:c}))},{type:i.DEFAULT,title:"Base Note",items:Object.entries(Y()).map(([s,c])=>({type:i.RADIO,title:s,model:m,name:"baseNote",value:c}))},{type:i.SEPARATOR},{type:i.DEFAULT,title:"Beat Count",items:Array(9).fill({}).map((s,c)=>({type:i.RADIO,title:String(c+1),model:m,name:"beatCount",value:c+1}))}]}]||[],{title:"Options",items:[{type:i.DEFAULT,title:`BPM (${a[h.SYNTHESIZER_BPM]})`,items:[30,60,120,240,480].map(s=>({type:i.RADIO,title:String(s),model:a,name:h.SYNTHESIZER_BPM,value:s}))}]},...F({core:o})].filter(Boolean)};export{rt as T,ct as c};
