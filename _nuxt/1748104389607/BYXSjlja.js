import{d as g,r as p,o as b,v as h,R as U,S as x}from"./BHV1diwp.js";const v=Symbol.for("nuxt:client-only"),w=g({name:"ClientOnly",inheritAttrs:!1,props:["fallback","placeholder","placeholderTag","fallbackTag"],setup(n,{slots:e,attrs:r}){const a=p(!1);b(()=>{a.value=!0});const l=U();return l&&(l._nuxtClientOnly=!0),x(v,!0),c=>{var d;if(a.value)return(d=e.default)==null?void 0:d.call(e);const o=e.fallback||e.placeholder;if(o)return o();const m=c.fallback||c.placeholder||"",y=c.fallbackTag||c.placeholderTag||"span";return h(y,r,m)}}}),t=[];for(let n=0;n<256;++n)t.push((n+256).toString(16).slice(1));function k(n,e=0){return(t[n[e+0]]+t[n[e+1]]+t[n[e+2]]+t[n[e+3]]+"-"+t[n[e+4]]+t[n[e+5]]+"-"+t[n[e+6]]+t[n[e+7]]+"-"+t[n[e+8]]+t[n[e+9]]+"-"+t[n[e+10]]+t[n[e+11]]+t[n[e+12]]+t[n[e+13]]+t[n[e+14]]+t[n[e+15]]).toLowerCase()}let u;const s=new Uint8Array(16);function S(){if(!u){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");u=crypto.getRandomValues.bind(crypto)}return u(s)}const _=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),i={randomUUID:_};function I(n,e,r){var l;if(i.randomUUID&&!n)return i.randomUUID();n=n||{};const a=n.random??((l=n.rng)==null?void 0:l.call(n))??S();if(a.length<16)throw new Error("Random bytes length must be >= 16");return a[6]=a[6]&15|64,a[8]=a[8]&63|128,k(a)}export{w as _,I as v};
