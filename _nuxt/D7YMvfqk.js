import{n as f}from"./CNkvSXuu.js";function b(t,n){return createImageBitmap(t,n).catch(a=>{throw new Error(`Failed to create ImageBitmap from blob: ${a}`)})}function h(t){return new Promise((n,a)=>{const e=new FileReader;e.onload=()=>n(e.result),e.onerror=o=>a(o),e.readAsDataURL(t)})}function C(t){return new Promise((n,a)=>{const e=new FileReader;e.onload=()=>{const o=new Blob([e.result],{type:t.type});n(o)},e.onerror=o=>a(o),e.readAsArrayBuffer(t)})}async function m(t,n){const a=new OffscreenCanvas(t.width,t.height);return a.getContext("2d")?.putImageData(t,0,0),a.convertToBlob(n)}function p(t){const n=t.split(",")[1];return d(n)}function d(t){const n=atob(t),a=new Array(n.length);for(let o=0;o<n.length;o++)a[o]=n.charCodeAt(o);const e=new Uint8Array(a);return new Blob([e])}function g(t){return new Promise((n,a)=>{const e=new Image;e.onload=()=>n(e),e.onerror=a,e.src=t})}async function v(t,n="image/png",a=1){const e=new OffscreenCanvas(t.width,t.height);e.getContext("2d")?.putImageData(t,0,0);const r=await e.convertToBlob({type:n,quality:a});return h(r)}async function x(t){return(await u(t)).convertToBlob()}function I(t,n=["#000000"],a=!1){const e=t.getImageData(0,0,t.canvas.width,t.canvas.height),o=e.data;for(let r=0;r<o.length;r+=4){const s=o[Number(r)],c=o[r+1],i=o[r+2],l=f(`#${s.toString(16)}${c.toString(16)}${i.toString(16)}`);(!n.includes(l)||o[r+3]!==255)&&(o[r+3]=0)}return a&&(t=new OffscreenCanvas(e.width,e.height).getContext("2d")),t.putImageData(e,0,0),t.canvas}async function y(t){const n=await g(t),a=new OffscreenCanvas(n.width,n.height);return a.getContext("2d")?.drawImage(n,0,0,n.width,n.height),a}async function u(t){const n=new OffscreenCanvas(t.width,t.height);return n.getContext("2d")?.drawImage(t,0,0,t.width,t.height),n}async function T(t){const n=new OffscreenCanvas(t.width,t.height);return n.getContext("2d").drawImage(t,0,0,t.width,t.height),n}async function O(t){const n=new OffscreenCanvas(t.width,t.height);return n.getContext("2d").putImageData(t,0,0),n}function B(t,n,a){a||(a=n*(t.height/t.width));const e=new OffscreenCanvas(n,a),o=e.getContext("2d");return o.imageSmoothingEnabled=!1,o.drawImage(t,0,0,n,a),e}function F(t,n,a){const r=new OffscreenCanvas(t.width,t.height),s=r.getContext("2d"),c=1-1*2,i=1-1*2;return s.translate(1*t.width,1*t.height),s.scale(c,i),s.drawImage(t,0,0,t.width,t.height),r}export{u as a,b,m as c,O as d,v as e,p as f,x as g,C as h,T as i,F as j,g as l,I as p,B as r,y as u};
