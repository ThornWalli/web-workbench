const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./CHzozvkI.js","./B1olVgM4.js","./BUU1NkbK.js","./CHLd88nu.css","./Uu07fvcW.js","./CiACgkXc.css","./C0s6aVd8.js","./Bn0T8SwD.css","./BHtCX32_.js","./CZFypg2d.js","./DEAznjDA.css","./BSKES50A.css","./h0CjWPC6.js","./B4Wca970.js","./CuhyRvkQ.css","./9V19AFUE.js","./Ds9lsDfM.js","./DDz0S8ig.js","./BxhCEbwT.js","./4lgYwaTL.css","./DcvgOCRL.js","./7MFW2ODw.js","./CXbNF4JJ.css","./Xupdrwif.js","./DWp2AHFe.css","./D-x-p6Mm.js","./DZNmLgaI.js","./CpIyErmU.js","./DNMHntIy.css","./r_0igSYh.js","./BADSAepT.css","./CioGTNSL.css","./BK4FJtX8.js","./BnQx2YJv.js","./RAasLaaH.js","./D4lI5vpz.js","./DdQrQ7-5.js","./6C4StZv5.js","./CDQba72W.js","./CYV3YR6m.css","./DBqxOoOp.css","./Nd8E8z7w.js","./BDuQcTSZ.js","./CtYz4Lhf.js","./_N77y_hU.js","./C6OIF6Wx.css","./CsT4nFwb.css","./DiRiyE1W.css","./BTvsVx3m.js","./CUWQgAUy.css"])))=>i.map(i=>d[i]);
import{L as D,O as g,K as h,a9 as k}from"./BUU1NkbK.js";import{i as F}from"./CpIyErmU.js";import{d as $,A as s,T as _}from"./Bu9-HbQ4.js";import{s as y,f as C,b}from"./DG6QdPnO.js";import{w as O,e as w,h as I,D as v,u as M,j as W,I as N,d as P,k as A}from"./BnQx2YJv.js";import{C as L}from"./CxKYomUj.js";import{I as u}from"./DcvgOCRL.js";async function z(l,o){let m;const c=l.modules.symbols,e=l.modules.windows,i=o||c.getSelectedItems().filter(t=>{if(t.fsItem)return t.fsItem;throw new Error(`Item has no fsItem. ${t.id}`)}).map(t=>t.fsItem);await Promise.all(i.map(async t=>{const a=D({actions:{openItemMeta:()=>n(a),save:(r,f)=>T(l,r,f),saveItemMeta:(r,f,p)=>E(l,r,f,p)},id:t.id,name:t.name,fsItem:t});[u.SYMBOL,u.VISIBLE,u.IGNORE_SYMBOL_REARRANGE,u.WINDOW_SCALE,u.WINDOW_SCROLL_X,u.WINDOW_SCROLL_Y,u.WINDOW_FULL_SIZE,u.WINDOW_SYMBOL_REARRANGE,u.WINDOW_SIDEBAR].forEach(r=>{a[r]=t.meta.has(r)?t.meta.get(r):!1}),e.addWindow({component:await h(()=>import("./CHzozvkI.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]),import.meta.url).then(r=>r.default),componentData:{fsItem:g(t),model:a},options:{title:`Edit File ${t.name}`,prompt:!1,scaleX:!1,scaleY:!1,scrollX:!1,scrollY:!1}}).awaitClose().then(()=>{})}));async function n(t){const a=t.fsItem;return m=e.addWindow({component:await h(()=>import("./D-x-p6Mm.js"),__vite__mapDeps([25,1,2,3,4,5,6,7,26,9,10,27,28,29,17,18,30,13,14,12,15,20,21,22,23,31]),import.meta.url).then(d=>d.default),componentData:{fsItem:g(a),model:t},options:{title:`Item Meta ${a.name}`,scale:!0,scrollY:!0},layout:{size:F(420,360)}},{full:!0}),m.awaitClose().then(()=>{m=void 0})}}async function T(l,o,m){const{id:c,name:e}=m,i=o.getPath();if(!c)throw new Error("Id is emoty!");let n;const t=l.addExecution();try{await E(l,o,m),e&&c!==e?n=await l.executeCommand(`rename "${i}" "${e}" -n`):n=await l.executeCommand(`rename "${i}" "${c}" -rn`),n=l.executeCommand(`rename "${i}" "${c}"`)}catch(a){throw t(),a}return t(),n}function V(){return Object.values(u)}async function E(l,o,m,c=!1){const e=l.addExecution();await l.executeCommand(`cleanfilemeta "${o.getPath()}" ${c?"--force":""}`),await V().filter(n=>m[n]!==void 0).reduce((n,t)=>n.then(async()=>{let a=m[t],d=!1;typeof a=="string"?a=`"${a}"`:typeof a=="object"&&(d=!0,a=O(encodeURIComponent(JSON.stringify(a)))),await l.executeCommand(`editfilemeta "${o.getPath()}" "${t}" ${a} ${d?"--json":""}`)}),Promise.resolve()),e()}const Q=$(({module:l})=>{const{fileSystem:o,core:m,disks:c}=l;return[{name:["mountDisk"],description:"Mount Disk",args:[new s({index:0,name:"id",description:"Disk ID"})],async action({id:e},i){const n=m.addExecution();try{const t=await c[e].data(),a=await o.addFloppyDisk(()=>t({core:m}));c[e].hidden||i.message(`Mount Disk <strong>${a.name}</strong> <strong>(${a.id})</strong> successful!`),n()}catch(t){throw console.error(t),w.get("cant_find_disk",e)}}},{name:["changeDirectory","cd"],description:"cd %path%",args:[new s({index:0,name:"path",description:"Directory path"})],async action({path:e}){if(!e)throw w.get("bad_args");try{await o.changeDirectory(e)}catch(i){throw console.error(i),w.get("cant_find",e)}}},{name:["exist"],description:"Check if file exists.",args:[new s({index:0,name:"path",description:"Filename"})],async action({path:e},i){if(!e)throw w.get("bad_args");const n=I(e),t=await o.exist(e);return t?i.message(`File ${n} exists`):i.message(`File ${n} does not exist`),t}},{name:["makedir","mkdir"],args:[new s({index:0,name:"path",description:"Filename"}),new s({index:1,name:"name",description:"Name"}),new s({name:"ignore",flag:!0,description:"Ignore file exist."})],async action({path:e,name:i,ignore:n},t){if(!e)throw w.get("bad_args");const a=await o.makedir(e,i||I(e),{override:n});return t.message(`Directory "${a.name}" created`),a}},{name:["remove","rm"],args:[new s({index:0,name:"path",description:"Filename"}),new s({name:["recursive","r"],flag:!0,description:"Remove Directory Items and Directories."}),new s({name:["ignore"],flag:!0,description:"Ignore the specified file is deleted."})],async action({path:e,recursive:i,ignore:n},t){if(!e)throw w.get("bad_args");return(await o.remove(e,i,{ignore:n})||[]).map(d=>{const r=d.type===v.TYPE?"Directory":"File";return t.message(`Removed ${r}: ${d.name}`),d})}},{name:["readfile","getfile"],description:"Get file content",args:[new s({index:0,name:"path",description:"Filename"})],async action({path:e}){if(!e)throw w.get("bad_args");return(await o.get(e)).data}},{name:["makefile","mkfile"],description:"Creates a file with the specified attributes.",args:[new s({index:0,name:"path",description:"Filename"}),new s({index:1,name:"name",description:"Name"}),new s({index:3,name:"data",description:"Data"}),new s({name:"override",flag:!0,description:"Deletes existing file and recreates."})],action:async(e,i)=>{const n=await S(m,e);return i.message(`File "${n.name}" created`),n}},{name:["editfile"],description:"Edits file with specified attributes.",args:[new s({index:0,name:"path",description:"Filename"}),new s({index:1,name:"data",description:"Data"})],action:async(e,i)=>{const n=await Y(m,e);return i.message(`File "${n.name}" edited`),n}},{name:["openEditFileDialog"],description:"Opens a file dialog to edit the file.",args:[new s({index:0,name:"path",description:"Filename"})],async action({path:e}){if(!e)throw w.get("bad_args");const i=await o.get(e);return z(m,[i])}},{name:["editfilemeta"],description:"Edits file with specified attributes.",args:[new s({index:0,name:"path",description:"Filename"}),new s({index:1,name:"name",description:"Name"}),new s({index:2,name:"value",description:"Value"}),new s({index:3,name:"json",description:"Is JSON value?",flag:!0})],async action({path:e,name:i,value:n,json:t},a){if(!e)throw w.get("bad_args");t&&(n=JSON.parse(decodeURIComponent(M(n))));const d=await o.editFileMeta(e,i,n);return a.message(`File  "${d.name}" Meta edited`),d}},{name:["cleanfilemeta"],description:"Removes all undefined meta values from the file.",args:[new s({index:0,name:"path",description:"Filename"}),new s({name:"force",flag:!0,description:"When set, forces the cleaning of meta values."})],async action({path:e,force:i},n){if(!e)throw w.get("bad_args");const t=await o.cleanFileMeta(e,{force:i});return n.message(`File  "${t.name}" Meta cleaned`),t}},{name:["makelink","mklink"],description:"Creates a link to the specified path.",args:[new s({index:0,name:"ref",description:"Reference path with id (example.ext)."}),new s({index:1,name:"name",description:"Displayed Name"}),new s({index:2,name:"dest",description:"Destination directory."})],async action({ref:e,name:i,dest:n},t){if(!e)throw w.get("bad_args");n=n||".";const a=await o.get(e),d=await o.makelink(a,i);return await o.get(n)!==o.currentItem&&await o.move(d,n,{override:!0}),t.message(`Created link "${i}" with "${await a.getPath()}"`),d}},{name:["editlink"],description:"",args:[new s({index:0,name:"path",description:"Reference filepath with id (example.ext)."}),new s({index:1,name:"ref",description:"Destination directory."})],async action({path:e,ref:i},n){if(!(e&&i))throw w.get("bad_args");const t=await o.get(i),a=await o.editlink(e,t);return n.message(`Edited link "${name}" with "${await t.getPath()}"`),a}},{name:"rename",description:"Renamed a file",args:[new s({index:0,name:"path",description:"Filepath with id (example.ext)."}),new s({index:1,name:"value",description:"Value for id or displayed name."}),new s({name:["name","n"],flag:!0,description:"When set, changes the display name."}),new s({name:["removeName","rn"],flag:!0,description:"When set, removes the display name."})],async action({path:e,value:i,name:n,removeName:t},a){if(!t&&(!e||!i))throw w.get("bad_args");const d=await o.get(e),r=n?d.name:d.id;return await o.rename(e,i,{name:n,removeName:t}),a.message(`Renamed from "${r}" to "${i}"`),d}},{name:["cp","copy"],args:[new s({index:0,name:"from",description:"Source Filepath with id (example.ext)."}),new s({index:1,name:"dest",description:"Destination Filepath with id (example.ext)."}),new s({name:["ignore","i"],flag:!0,description:"When sets, creates a new file if exists."})],async action({from:e,dest:i,ignore:n},t){let a=i;if(!a&&n&&(a=e),!a||!e)throw w.get("bad_args");const d=await o.copy(e,a,{ignore:n});return t.message(`Copied from "${e}" to "${a}"`),d}},{name:["mv","move"],description:"move %from% %to%",args:[new s({index:0,name:"from",description:"From path"}),new s({index:1,name:"to",description:"To path"}),new s({index:2,name:"item-position",description:"Sets the position in the Icon view. (x,y)"})],async action({from:e,to:i,itemPosition:n},t){if(!i||!e)throw w.get("bad_args");const a=await o.move(e,i);n&&a.meta.set(u.POSITION,[0,0].map((r,f)=>{const p=n.split(",");return parseInt(p[Number(f)]||"0")})),a.save();let d;return a instanceof v?d="Directory":d="File",t.message(`${d} moved ${a.name}`),a}},{name:["executeFile"],description:"Execute file.",args:[new s({index:0,name:"path",description:"Path to the file"})],async action({path:e}){if(!e)throw w.get("bad_args");const i=await o.get(e);if(typeof i.action=="function")return i.action(m);throw w.get("cant_find_action",e)}}]});w.add("cant_find_action","Can't find action %1");w.add("cant_find_disk","Can't find disk %1");async function S(l,{path:o,name:m,data:c,override:e=!1}){if(!o)throw w.get("bad_args");return typeof c=="string"&&(c=W(c)),await l.modules.files.fs.makeFile(o,m,c,{override:e||!1,meta:[]})}function Y(l,{path:o,data:m}){if(!o)throw w.get("bad_args");return typeof m=="string"&&(m=W(m)),l.modules.files.fs.editFile(o,m)}async function X(l,o,m){const c=await l.executeCommand(`exist "${o}"`);let e=!1;return c&&(e=await l.executeCommand('openDialog "File exist, overwrite?" --confirm')),S(l,{path:o,data:m,override:e})}async function U(l,o){var e;const m=await((e=l.modules.files)==null?void 0:e.fs.get(o)),c=await l.executeCommand(`readfile "${o}"`);return{fsItem:m,value:c}}const ee=$(({module:l,core:o})=>{const{fileSystem:m}=l;return[{name:"openPreview",args:[new s({index:0,name:"path",description:"Path to the file"}),new s({name:"maximized",description:"If set, window is maximized."})],async action({path:c,maximized:e}){var d,r;const i=await m.get(c),{type:n,content:t,openMaximized:a}=i.data;if(n==="basic"&&!i.data[L.HAS_WINDOW_OUTPUT])await((d=o.modules.parser)==null?void 0:d.parseBasic(t,async(f,p)=>await o.executeCommand(f,p)));else{const f=await h(()=>import("./BK4FJtX8.js"),__vite__mapDeps([32,33,20,2,21,22,27,34,35,36,37,38,39,23,40]),import.meta.url).then(p=>p.default);(r=o.modules.windows)==null||r.addWindow({component:f,componentData:{type:n,content:t},options:{title:i.name,scaleX:!0,scaleY:!0,scrollX:!0,scrollY:!0},layout:{size:F(420,360)}},{full:a||e||!1})}}},{name:"saveFileDialog",args:[new s({index:0,name:"data",description:"File Content"}),new s({index:1,name:"id",description:"File Id"}),new s({index:2,name:"extension",description:"File Extension"})],action:c=>j(o,c)},{name:"openFileDialog",args:[new s({index:0,name:"type",description:"Type for File or Directory to open."})],async action({type:c}){var t;const e=D({}),i=await h(()=>import("./Nd8E8z7w.js"),__vite__mapDeps([41,42,1,2,3,4,5,6,7,43,44,45,33,20,21,22,27,34,35,36,37,46,8,9,10,11,23,47]),import.meta.url).then(a=>a.default),n=(t=o.modules.windows)==null?void 0:t.addWindow({component:i,componentData:{type:c,model:e,fsItem:m.root&&g(m.root)},options:{title:"Open File",scaleX:!1,scaleY:!1,scrollX:!1,scrollY:!1}});if(n){const{value:a}=await n.awaitClose();return a&&U(o,a)}}},{name:"fileinfo",description:"Get info from File or Directory",args:[new s({index:0,name:"path",description:"Path to the file"}),new s({index:1,name:"name",description:"Name from the Info"}),new s({index:2,name:["list","ls"],flag:!0,description:"List all Infos"})],async action({path:c,name:e,list:i},n){const t=await m.getItemMetaList(c);if(i){const a=new _;a.addColumns([{value:"Name",align:"left",minWidth:20},{value:"Value",align:"left",minWidth:20}]),a.addRows(t.map(({name:d,value:r})=>{let f=r;return Array.isArray(r)&&(f=r.join(" ")),[d,f]})),n.message([a])}else return t.find(a=>a.name===e)}},{name:["info","i"],args:[new s({index:0,name:"path",description:"Path to the file"})],async action({path:c},e){let i=m.root;c&&(i=await m.get(c)),i!=null&&i.parent&&(i=i.parent);const n=await(i==null?void 0:i.getItems()),t=new _;t.addColumns([{value:"Unit",align:"left",minWidth:8},{value:"Size",align:"right",minWidth:6},{value:"Used",align:"right",minWidth:6},{value:"Free",align:"right",minWidth:6},{value:"Full",minWidth:4},{value:"Errs",align:"center",minWidth:4},{value:"Status",align:"center",minWidth:10},{value:"Name",align:"right",minWidth:14}]);const a=Array.from((n==null?void 0:n.values())||[]).filter(r=>r instanceof N);t.addRows(a.map(r=>{let f=0;return(r.size>0||r.maxSize>0)&&(f=r.size/r.maxSize*100),[`${r.id}:`,y(r.maxSize),y(r.size),y(r.maxSize-r.size),`${f}%`,"0",r.locked?"Read":"Read/Write",`${r.name||""}`]}));const d=["","Mounted disks:",t,"","Volumes available:"];a.forEach(r=>{d.push(`${r.name}: [Mounted]`)}),d.push(""),e.message(d)}},{name:["list","ls"],args:[new s({index:0,name:"path",description:"Path to the file"}),new s({name:"dir-size",flag:!0,description:"Show Directory Size."})],async action({path:c,dirSize:e},i){let n=m.currentItem;c&&(n=await m.get(c));const t=Array.from((await(n==null?void 0:n.getItems())||[]).values()),a=new _;a.addColumns([{value:"Name",align:"left",minWidth:26},{value:"Size",align:"right",minWidth:8},{value:"Access",align:"center",minWidth:12},{value:"Date / Time",align:"center",minWidth:18}]),a.addRows(t.reduce((f,p)=>{let x;p instanceof P&&!e?x="DIR":x=C(y(p.size),8,!0,"0");const R=p.isLocked()?"Read":"Read/Write";return f.push([`${p.id}:`,x,R,p.createdDate?b("D-mm-y H:I:S",p.createdDate):""]),f},[]));const d=t.reduce((f,p)=>(p instanceof v&&f++,f),0),r=t.reduce((f,p)=>(f+=p.size,f),0);return i.message([a,`${t.length} files - ${d} directories - ${r} blocks used`]),Promise.resolve()}}]});async function j(l,{data:o,id:m,extension:c}){var n,t;const e=await h(()=>import("./BTvsVx3m.js"),__vite__mapDeps([48,1,2,3,4,5,6,7,43,44,45,33,20,21,22,27,34,35,36,37,46,8,9,10,11,49]),import.meta.url).then(a=>a.default),i=(t=l.modules.windows)==null?void 0:t.addWindow({component:e,componentData:{fsItem:((n=l.modules.files)==null?void 0:n.fs.root)&&g(l.modules.files.fs.root),id:m},options:{title:"Save File",scaleX:!1,scaleY:!1,scrollX:!1,scrollY:!1}});if(i){const{value:a}=await i.awaitClose();if(a){let d=a;c&&(d=A(a,c));const r=await X(l,d,o);if(r)return g(k(r))}}}export{Q as a,ee as c,Y as e,z as o,j as s};
