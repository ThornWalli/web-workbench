var u=Object.defineProperty;var g=(t,s,r)=>s in t?u(t,s,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[s]=r;var e=(t,s,r)=>g(t,typeof s!="symbol"?s+"":s,r);import{g as c}from"./DASBRxSW.js";class o{constructor(s){e(this,"name");this.name=s}getVars(){return[]}toCSSVars(){return this.getVars().reduce((s,r)=>(s[`--${r}`]=this[String(r)],s),{})}}const n={POINTER_1:"pointer_1",POINTER_2:"pointer_2",WAIT:"wait",CROSSHAIR:"crosshair"};class C extends o{constructor(){super(n.POINTER_1)}}class p extends o{constructor(){super(n.POINTER_2)}}class h extends o{constructor(){super(n.WAIT)}}class l extends o{constructor(){super(n.CROSSHAIR);e(this,"focusColor");e(this,"focusSize",2)}getVars(){return["focusColor","focusSize"]}}function I(t){const{x:s,y:r,width:a,height:i}=t.getBoundingClientRect();return{size:c(a,i),position:c(s,r)}}export{n as C,C as P,h as W,p as a,l as b,I as g};
