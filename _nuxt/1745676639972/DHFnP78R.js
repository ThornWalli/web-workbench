import{N as C,u as N}from"./C8jOnDpX.js";import{M as R,a as g}from"./CbV9MIPk.js";import{T as w,f as d}from"./BhyNvxlc.js";import{d as u}from"./0lJVpglL.js";import x from"./BlGw-RJp.js";import{N as T}from"./DMsu-ujD.js";import{T as D}from"./D5pZ5GXT.js";import{_,t as v,v as p,z as c,A as f,g as l,N as h,a9 as b,C as A}from"./CYlf7ZdY.js";import{f as k}from"./CSlkdJUE.js";import{S as B}from"./6C4StZv5.js";import{u as L}from"./Dr9DEtSu.js";import"./gfIAX8eU.js";import"./CkopU8PM.js";import"./C5mdboMC.js";import"./C6aID195.js";import"./D7n7Xkqx.js";import"./D4lI5vpz.js";import"./JXQ19Fa6.js";import"./DlfJZ9EB.js";import"./DmCMAY6H.js";import"./BSj7esSs.js";import"./CNkvSXuu.js";import"./B-KIywKT.js";const M={components:{TimelineCanvas:D,Navigation:C,Metronom:R},props:{track:{type:w,required:!0}},async setup(){return{...await N()}},data(){return{duration:0,model:{input:"note",inputType:""},metronom:new g,subscriptions:new B,midiController:new x,openNotes:new Map}},computed:{navigation(){return{model:this.model,items:[[],[{text:"Input:"},{label:"Note",value:"note",name:"input"},{label:"Pause",value:"pause",name:"input",disabled:!0}],[{text:"Note:&nbsp;"},{label:"Auto",value:"",name:"inputType"},...d().map(([e])=>({label:`1/${e.replace(/(\d+)[nm]/,"$1")} n`,name:"inputType",value:e})),{spacer:!0},{label:"Remove Note",action:()=>{this.track.removeNote(this.track.selectedIndex)}},{label:"Clean Range",action:()=>{this.track.removeNotesByDurationRange(this.metronom.getDuration(),this.metronom.timeDuration)}},{label:"Clean Beat",action:()=>{this.track.removeNotesFromBeat(this.track.getBeatIndex())}},{label:"Reset",action:()=>{this.reset()}}]]}}},async mounted(){await this.midiController.start(),console.log("domEvents",u);const e=this.midiController.listen();this.subscriptions.add(u.keyDown.subscribe(o=>{switch(o.code){case"ArrowLeft":this.metronom.prev();break;case"ArrowRight":this.metronom.next();break;case"ArrowUp":this.metronom.prevBeat();break;case"ArrowDown":this.metronom.nextBeat();break;default:if(/Digit(\d+)/.test(o.code)){const i=o.code.replace(/Digit(\d+)/,"$1"),r=d()[i-1];r&&(this.metronom.time=r[0])}break}console.log(o)}),e.pipe(k(({type:o})=>o==="noteOn")).subscribe(this.onNoteOn.bind(this)),e.pipe(k(({type:o})=>o==="noteOff")).subscribe(this.onNoteOff.bind(this)))},unmounted(){this.subscriptions.unsubscribe(),this.midiController.destroy()},methods:{onReady({render:e}){this._render=e},onRender(e,{position:o,dimension:i}){const r=Array.from(this.openNotes.values());for(let n=0;n<r.length;n++){const t=r[Number(n)];console.log("test",t);const a=(this.metronom.now()-t)/1e3/(this.metronom.speed*2)*i.x;console.log(a),e.fillRect(o.x,o.y,a,i.y)}},onNoteOn({value:e}){console.log("value.identifier",e.identifier,this.metronom.getDuration()),this.animationLoop||(this.animationLoop=$(()=>{this._render&&this._render()})),this.openNotes.set(e.identifier,this.metronom.now())},onNoteOff({value:e}){const o=[1,2,4,8,16,32].map(t=>[`${t}n`,`${t}t`,`${t}n.`]).flat().map(t=>[t,new(this.tone.getTone()).Time(t).toSeconds()]).sort((t,s)=>s[1]-t[1]),i=Math.max((this.metronom.now()-this.openNotes.get(e.identifier))/1e3,o[o.length-1][1]);this.openNotes.delete(e.identifier);const r=new window.Tone.Time(o.map(([,t])=>t).find(t=>{const s=t*.2;return t-s<=i&&i<=t+s}));console.log("time",r.toNotation());const n=this.metronom.getDuration();console.log({delay:n,name:e.identifier,time:r.toNotation()}),this.track.addNote(new T({delay:n,name:e.identifier,time:r.toNotation()})),console.log("notes",this.track.notes),this.openNotes.size<1&&(this.animationLoop.stop(),this.animationLoop=null)},reset(){this.track.reset()},onClickNote(e){console.log("onClickNote",e)}}};function $(e){let o=0,i=0,r=!1;const n=t=>{const s=t-o;o=t,i+=s,e(t,i),r||requestAnimationFrame(n)};return requestAnimationFrame(n),{stop:()=>r=!0}}function O(e,o,i,r,n,t){const s=l("timeline-canvas"),a=l("navigation"),y=l("metronom");return p(),v("div",null,[c(y,{model:n.metronom,onRender:t.onRender,onReady:t.onReady,onValue:o[0]||(o[0]=m=>i.track.setCurrentDuration(m))},{background:f(({onRefresh:m})=>[(p(),A(s,{key:n.metronom.value,track:i.track,duration:n.metronom.getDuration(),clickable:"",onRefresh:m,"onNote:click":t.onClickNote},null,8,["track","duration","onRefresh","onNote:click"]))]),navigation:f(({navigation:m})=>[c(a,h(b(m)),null,16),c(a,h(b(t.navigation)),null,16)]),_:1},8,["model","onRender","onReady"])])}const E=_(M,[["render",O]]),q={components:{Editor:E},async setup(){return{...L(),...await N()}},data(){const e=new g;return{track:new w({beatCount:1,speed:e.speed,notes:[{name:"C4",time:"2n",delay:4}]})}}};function z(e,o,i,r,n,t){const s=l("editor");return p(),v("div",null,[c(s,{track:n.track},null,8,["track"])])}const at=_(q,[["render",z]]);export{at as default};
