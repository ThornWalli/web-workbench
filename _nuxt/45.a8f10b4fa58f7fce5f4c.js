(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{75:function(r,n,e){"use strict";function t(r,n,e,t){for(var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,f=Math.abs(e-r),h=r<e?1:-1,c=Math.abs(t-n),y=n<t?1:-1,d=(f>c?f:-c)/2,N=[],i=0;0===o||i>=1?(N.push([r,n]),i=0):i+=1/o,r!==e||n!==t;){var m=d;m>-f&&(d-=c,r+=h),m<c&&(d+=f,n+=y)}return N}function line(r,n,e,o,f,h){var{density:c=0}=h;t(n,e,o,f,c).forEach(n=>{r(n[0],n[1])})}function o(r,n,e,t,o,f,h,c,y){var d=arguments.length>9&&void 0!==arguments[9]?arguments[9]:.001,N=0,m=0,u=0;for(u=0;u<=1;u+=d)N=(1-u)**3*n+3*u*(1-u)**2*t+3*u**2*(1-u)*f+u**3*c,m=(1-u)**3*e+3*u*(1-u)**2*o+3*u**2*(1-u)*h+u**3*y,r(parseInt(N),parseInt(m))}function f(r,n,e,t,o,f){var{strokeSize:h=0,filled:c=!1,density:y}=f;if(c)for(var d=(n,e)=>r(n,e,!0),i=e;o<0?i>=e+o:i<=e+o;o<0?i--:i++)line(d,n,i,n+t,i,{density:y});if(h>0){h=Math.floor(h/2);var N=[n-(h=[t<0?-h:h,o<0?-h:h])[0],e-h[1]];[[n-h[0],e-h[1]],[n-h[0],e+o+h[1]],[n+t+h[0],e+o+h[1]],[n+t+h[0],e-h[1]],N].forEach(n=>{line(r,N[0],N[1],n[0],n[1],{density:y}),N=n})}}function ellipse(r,n,e,t,o,f){var{filled:h=!1,density:c=0}=f;t<0&&(t=Math.abs(t)),o<0&&(o=Math.abs(o));var y,d,N,m=t*t,l=o*o,M=4*m,E=4*l,i=0,v=(n,e)=>r(n,e,!0),A=[];for(y=0,d=o,N=2*l+m*(1-2*o);l*y<=m*d;y++)!c||i>=1?(A.push([n+y,e+d]),A.push([n-y,e-d]),A.push([n-y,e+d]),A.push([n+y,e-d]),i=0):i+=1/c,N>=0&&(N+=M*(1-d),d--),N+=l*(4*y+6);for(i=0,y=t,d=0,N=2*m+l*(1-2*t);m*d<=l*y;d++)!c||i>=1?(A.push([n+y,e+d]),A.push([n-y,e+d]),A.push([n+y,e-d]),A.push([n-y,e-d]),i=0):i+=1/c,N>=0&&(N+=E*(1-y),y--),N+=m*(4*d+6);if(h)for(var I=-o;I<=o;I++)for(var x=-t;x<=t;x++)x*x*o*o+I*I*t*t<=o*o*t*t&&v(n+x,e+I);A.forEach(n=>{r(n[0],n[1])})}function polygon(r,n,e,t){var o,{strokeSize:f=0,filled:c=!1,density:y=0}=t,d=Number.MAX_VALUE,N=Number.MAX_VALUE,m=Number.MIN_VALUE,l=Number.MIN_VALUE;if(n.forEach(n=>{o&&(n.x>m&&(m=n.x),n.y>l&&(l=n.y),n.x<d&&(d=n.x),n.y<N&&(N=n.y),line(r,o.x,o.y,n.x,n.y,{density:y})),o=n}),e){var M=n[0];o&&(M.x>m&&(m=M.x),M.y>l&&(l=M.y),M.x<d&&(d=M.x),M.y<N&&(N=M.y),line(r,o.x,o.y,M.x,M.y,{density:y}))}if(c){h((n,e)=>r(n,e,!0),n,{IMAGE_LEFT:d,IMAGE_TOP:N,IMAGE_RIGHT:m,IMAGE_BOTTOM:l})}}function h(r,n,e){var t,{IMAGE_LEFT:o=0,IMAGE_TOP:f=0,IMAGE_RIGHT:h,IMAGE_BOTTOM:c}=e,y=[],d=[];n.forEach(polygon=>{y.push(polygon.y),d.push(polygon.x)});var N,m,i,l,M,E=Array(n.length);for(m=f;m<c;m++){for(t=0,l=n.length-1,i=0;i<n.length;i++)(y[Number(i)]<m&&y[Number(l)]>=m||y[Number(l)]<m&&y[Number(i)]>=m)&&(E[t++]=Math.round(d[Number(i)]+(m-y[Number(i)])/(y[Number(l)]-y[Number(i)])*(d[Number(l)]-d[Number(i)]))),l=i;for(i=0;i<t-1;)E[Number(i)]>E[i+1]?(M=E[Number(i)],E[Number(i)]=E[i+1],E[i+1]=M,i&&i--):i++;for(i=0;i<t&&!(E[Number(i)]>=h);i+=2)if(E[i+1]>o)for(E[Number(i)]<o&&(E[Number(i)]=o),E[i+1]>h&&(E[i+1]=h),N=E[Number(i)];N<E[i+1];N++)r(N,m)}}e.r(n),e.d(n,"getLinePoints",(function(){return t})),e.d(n,"line",(function(){return line})),e.d(n,"curve",(function(){return o})),e.d(n,"rectangle",(function(){return f})),e.d(n,"ellipse",(function(){return ellipse})),e.d(n,"polygon",(function(){return polygon})),e.d(n,"fillPolygon",(function(){return h}))}}]);