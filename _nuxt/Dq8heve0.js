var x=Object.defineProperty;var w=(i,t,e)=>t in i?x(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>w(i,typeof t!="symbol"?t+"":t,e);import{T as g}from"./d5toMDZY.js";import{i as p}from"./CpIyErmU.js";import{c as C}from"./Cse7rKMM.js";import{d as b,r as f,a0 as d,o as _,y,z as T,A as v,J as R,S as B,ac as E,_ as D}from"./Bx1Gqxs7.js";const c=2,S="n";let M=class{constructor({speed:t=1,time:e="4n",beatCount:o=1}={}){a(this,"time");a(this,"speed");a(this,"beatCount");a(this,"value",0);this.time=e,this.speed=t,this.beatCount=o}prev(){this.value=Math.max(this.value-this.timeDuration,0)}reset(){this.value=0}next(){this.value=this.value+this.timeDuration}get currentBeat(){return Math.floor(this.value/c)}prevBeat(t=this.beatCount){this.value=Math.max(this.value-t*c,0)}setBeat(t,e=1){this.value=t*e*c}nextBeat(t=this.beatCount){console.log("nexeatt",t),this.value=this.value+t*c}get timeDuration(){return g(this.time,S).toSeconds()/this.speed}get steps(){return 2/this.timeDuration}now(){return window.performance.now()}getDuration(){return this.value}};class A{constructor(t,e,o={}){a(this,"canvas");a(this,"ctx");a(this,"metronom");a(this,"noteTimes");a(this,"outerMargin",[32,0,19,0]);a(this,"beatCount",2);this.setOptions(o),this.canvas=t;const s=t.getContext("2d");if(!s)throw new Error("Canvas context is not available");if(this.ctx=s,this.noteTimes=C(),e instanceof M)this.metronom=e;else throw new Error("MetronomRenderer: metronom must be an instance of Metronom")}setOptions(t){const{outerMargin:e}=t||{};this.outerMargin=e||this.outerMargin}render(t){const e=this.ctx;e.clearRect(0,0,this.canvas.width,this.canvas.height);const o=p(this.outerMargin[0],this.outerMargin[1]),s=p(this.canvas.width-(this.outerMargin[0]+this.outerMargin[2]),this.canvas.height-(this.outerMargin[1]+this.outerMargin[3]));e.fillStyle="#FFAA5580",e.fill(this.getPath(o,s)),e.fillRect(o.x+Math.min(Math.max(Math.round(s.x*(this.metronom.value%(2*this.metronom.beatCount))/2/this.metronom.beatCount),0),s.x),o.y,s.x/this.metronom.steps/this.metronom.beatCount,s.y),typeof t=="function"&&t(e,{position:o,dimension:s})}getPath(t,e){const o=this.metronom,s=new Path2D,u=g(o.time).toSeconds();for(let h=0;h<this.noteTimes.length;h++){const r=this.noteTimes[Number(h)],n=2;for(let m=1;m<=(2/r[1]-1)*this.metronom.beatCount;m++)s.rect(t.x+Math.round(e.x*r[1]*m/2-n/2)/this.metronom.beatCount-n/2,t.y,n,38-2/r[1]);for(let m=0;m<=1/u*2*o.speed*this.metronom.beatCount;m++)s.rect(t.x+Math.round(e.x*u*m/o.speed/2-n/2)/this.metronom.beatCount-n/2,t.y,n,e.y)}return s}}const N={class:"synthesizer-metronom"},P={class:"wrapper"},k=b({__name:"Metronom",props:{model:{type:M,required:!0}},emits:["value","render","ready"],setup(i,{emit:t}){const e=f(),o=i,s=t,l=f();d(()=>o.model.value,r=>{s("value",r),h()}),d(()=>o.model.time,()=>{h()}),d(()=>o.model.speed,()=>{h()}),_(()=>{if(!e.value)throw new Error("Canvas element is not defined");l.value=new A(e.value,o.model),u(),s("ready",{render:()=>h()})});function u(){if(!e.value)return;const{width:r,height:n}=e.value.getBoundingClientRect();e.value.width=r,e.value.height=n,h()}function h(){var r;(r=l.value)==null||r.render((n,m)=>{s("render",n,m)})}return(r,n)=>(T(),y("div",N,[v("div",P,[R(r.$slots,"background",B(E({onRefresh:()=>u()})),()=>[n[0]||(n[0]=v("div",{class:"spacer"},null,-1))],!0),v("canvas",{ref_key:"canvasEl",ref:e},null,512)])]))}}),q=D(k,[["__scopeId","data-v-3f2e3064"]]);export{M,q as a};
