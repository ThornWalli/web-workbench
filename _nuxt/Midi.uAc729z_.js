import{S as C,b as p,e as u,j as R,k as x,u as T}from"./index.pHb0QNhI.js";import{N as D,u as w}from"./Navigation.CqMo5GjB.js";import{M as A,a as N}from"./Metronom.C7wV8nXN.js";import{T as g,f as h}from"./Track.D0Y9CSOM.js";import B from"./MidiController.CAJyiplv.js";import{N as L}from"./NoteDescription.BW5eesrr.js";import{T as M}from"./TimelineCanvas.BUQEiYF6.js";import{_,i as c,t as d,v,z as l,A as f,E as $,N as b,ae as k}from"./entry.iryMmbvS.js";import"./index.CTgiTu_k.js";import"./index.CwZ1AmgN.js";import"./viewport.Byzer3nm.js";import"./math.BwsrdhRf.js";import"./async.2D_YJbQ6.js";import"./NoteRenderer.BbRYEyNt.js";const E={components:{TimelineCanvas:M,Navigation:D,Metronom:A},props:{track:{type:g,required:!0}},async setup(){return{...await w()}},data(){return{duration:0,model:{input:"note",inputType:""},metronom:new N,subscriptions:new C,midiController:new B,openNotes:new Map}},computed:{navigation(){return{model:this.model,items:[[],[{text:"Input:"},{label:"Note",value:"note",name:"input"},{label:"Pause",value:"pause",name:"input",disabled:!0}],[{text:"Note:&nbsp;"},{label:"Auto",value:"",name:"inputType"},...h().map(([e])=>({label:`1/${e.replace(/(\d+)[nm]/,"$1")} n`,name:"inputType",value:e})),{spacer:!0},{label:"Remove Note",action:()=>{this.track.removeNote(this.track.selectedIndex)}},{label:"Clean Range",action:()=>{this.track.removeNotesByDurationRange(this.metronom.getDuration(),this.metronom.timeDuration)}},{label:"Clean Beat",action:()=>{this.track.removeNotesFromBeat(this.track.getBeatIndex())}},{label:"Reset",action:()=>{this.reset()}}]]}}},async mounted(){await this.midiController.start(),console.log("domEvents",p);const e=this.midiController.listen();this.subscriptions.add(p.keydown.subscribe(o=>{switch(o.code){case"ArrowLeft":this.metronom.prev();break;case"ArrowRight":this.metronom.next();break;case"ArrowUp":this.metronom.prevBeat();break;case"ArrowDown":this.metronom.nextBeat();break;default:if(/Digit(\d+)/.test(o.code)){const n=o.code.replace(/Digit(\d+)/,"$1"),r=h()[n-1];r&&(this.metronom.time=r[0])}break}console.log(o)}),e.pipe(u(({type:o})=>o==="noteOn")).subscribe(this.onNoteOn.bind(this)),e.pipe(u(({type:o})=>o==="noteOff")).subscribe(this.onNoteOff.bind(this)))},unmounted(){this.subscriptions.unsubscribe(),this.midiController.destroy()},methods:{onReady({render:e}){this._render=e},onRender(e,{position:o,dimension:n}){const r=Array.from(this.openNotes.values());for(let i=0;i<r.length;i++){const t=r[Number(i)];console.log("test",t);const a=(this.metronom.now()-t)/1e3/(this.metronom.speed*2)*n.x;console.log(a),e.fillRect(o.x,o.y,a,n.y)}},onNoteOn({value:e}){console.log("value.identifier",e.identifier,this.metronom.getDuration()),this.animationLoop||(this.animationLoop=O(()=>{this._render&&this._render()})),this.openNotes.set(e.identifier,this.metronom.now())},onNoteOff({value:e}){const o=[1,2,4,8,16,32].map(t=>[`${t}n`,`${t}t`,`${t}n.`]).flat().map(t=>[t,new(this.tone.getTone()).Time(t).toSeconds()]).sort((t,s)=>s[1]-t[1]),n=Math.max((this.metronom.now()-this.openNotes.get(e.identifier))/1e3,o[o.length-1][1]);this.openNotes.delete(e.identifier);const r=new window.Tone.Time(o.map(([,t])=>t).find(t=>{const s=t*.2;return t-s<=n&&n<=t+s}));console.log("time",r.toNotation());const i=this.metronom.getDuration();console.log({delay:i,name:e.identifier,time:r.toNotation()}),this.track.addNote(new L({delay:i,name:e.identifier,time:r.toNotation()})),console.log("notes",this.track.notes),this.openNotes.size<1&&(this.animationLoop.stop(),this.animationLoop=null)},reset(){this.track.reset()},onClickNote(e){console.log("onClickNote",e)}}};function O(e){let o=0,n=0,r=!1;const i=t=>{const s=t-o;o=t,n+=s,e(t,n),r||requestAnimationFrame(i)};return requestAnimationFrame(i),{stop:()=>r=!0}}function P(e,o,n,r,i,t){const s=c("timeline-canvas"),a=c("navigation"),y=c("metronom");return d(),v("div",null,[l(y,{model:i.metronom,onRender:t.onRender,onReady:t.onReady,onValue:o[0]||(o[0]=m=>n.track.currentDuration=m)},{background:f(({onRefresh:m})=>[(d(),$(s,{key:i.metronom.value,track:n.track,duration:i.metronom.getDuration(),clickable:"",onRefresh:m,"onNote:click":t.onClickNote},null,8,["track","duration","onRefresh","onNote:click"]))]),navigation:f(({navigation:m})=>[l(a,b(k(m)),null,16),l(a,b(k(t.navigation)),null,16)]),_:1},8,["model","onRender","onReady"])])}const q=_(E,[["render",P]]),z={components:{Editor:q},props:{...R},emits:[...x],async setup(e,o){return{...T(e,o),...await w()}},data(){const e=new N;return{track:new g({beatCount:1,speed:e.speed,notes:[{name:"C4",time:"2n",delay:4}]})}}};function F(e,o,n,r,i,t){const s=c("editor");return d(),v("div",null,[l(s,{track:i.track},null,8,["track"])])}const ee=_(z,[["render",F]]);export{ee as default};
