import{d as y,r as g,o as p,t as b,P as h}from"./DoVacF4u.js";const U=Symbol.for("nuxt:client-only"),T=y({name:"ClientOnly",inheritAttrs:!1,props:["fallback","placeholder","placeholderTag","fallbackTag"],setup(n,{slots:e,attrs:u}){const a=g(!1);return p(()=>{a.value=!0}),h(U,!0),l=>{var o;if(a.value)return(o=e.default)==null?void 0:o.call(e);const r=e.fallback||e.placeholder;if(r)return r();const i=l.fallback||l.placeholder||"",m=l.fallbackTag||l.placeholderTag||"span";return b(m,u,i)}}}),t=[];for(let n=0;n<256;++n)t.push((n+256).toString(16).slice(1));function x(n,e=0){return(t[n[e+0]]+t[n[e+1]]+t[n[e+2]]+t[n[e+3]]+"-"+t[n[e+4]]+t[n[e+5]]+"-"+t[n[e+6]]+t[n[e+7]]+"-"+t[n[e+8]]+t[n[e+9]]+"-"+t[n[e+10]]+t[n[e+11]]+t[n[e+12]]+t[n[e+13]]+t[n[e+14]]+t[n[e+15]]).toLowerCase()}let c;const k=new Uint8Array(16);function v(){if(!c){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");c=crypto.getRandomValues.bind(crypto)}return c(k)}const w=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),d={randomUUID:w};function _(n,e,u){var l;if(d.randomUUID&&!n)return d.randomUUID();n=n||{};const a=n.random??((l=n.rng)==null?void 0:l.call(n))??v();if(a.length<16)throw new Error("Random bytes length must be >= 16");return a[6]=a[6]&15|64,a[8]=a[8]&63|128,x(a)}export{T as _,_ as v};
