var O=Object.defineProperty;var _=(r,t,n)=>t in r?O(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n;var u=(r,t,n)=>_(r,typeof t!="symbol"?t+"":t,n);import{S as D,P as q,b as P,c as k,d as b,e as K,F as B,D as L,A as Y,V as j,a as C,n as H,f as M,N as U}from"./DApFAwaH.js";import{D as F}from"./BaLl6BVZ.js";import{T as Z,a as z}from"./DHfQ7N5I.js";import{I as p,C as h,r as N,K as $,a as G,b as V}from"./o5_jRgdX.js";import{K as R,d as X,r as x,t as J,v as W,z as v,_ as Q}from"./DepUWdG1.js";import{d as tt,M as o}from"./hgdfUW9W.js";import{c as et}from"./DQWRfqHy.js";import{A as st}from"./Crnau0sa.js";const nt={[p.AM]:Y,[p.DUO]:L,[p.FM]:B,[p.MEMBRANE]:K,[p.METAL]:b,[p.MONO]:k,[p.PLUCK]:P,[p.POLY]:q,[p.SYNTH]:D};function at(r=p.SYNTH){return nt[r]}class Tt{constructor(t,n){u(this,"track");u(this,"playing",!1);u(this,"currentSequence");u(this,"autoplay");u(this,"instrument");u(this,"instruments",[]);u(this,"sequenceNoteIndex",{});u(this,"instrumentIndex",-1);const{autoplay:s}=n||{};if(!(t instanceof Z))throw new Error("TrackPlayer requires a Track");this.track=t,this.autoplay=s!==void 0?s:!0}createInstrument(){var t;(t=this.instrument)==null||t.dispose(),this.instrument=I(this.track.type)}refresh(){const t=this.track.notes;return this.createSequence(t,()=>{console.log("complete"),this.clearSequence(),this.playing=!1}),t}play(){if(!this.track.type)throw new Error("TrackPlayer requires an instrument");if(this.refresh(),!this.currentSequence)throw new Error("TrackPlayer requires a sequence");return this.autoplay&&(this.currentSequence.start(0),this.playing=!0),this.currentSequence}pause(){this.instruments.forEach(t=>t.context.transport.pause()),this.playing=!1}stop(){this.clearSequence(),this.playing=!1}restart(){this.stop(),this.play()}reset(){this.clearSequence(),this.stop(),this.track.notes=[]}destroy(){var t;(t=this.instrument)==null||t.dispose(),this.instruments.forEach(n=>n.dispose()),this.clearSequence()}triggerAttack(t){this.instrumentIndex++,this.getInstrument().triggerAttack(t)}triggerRelease(){this.getInstrument().triggerRelease(),this.instrumentIndex--}triggerAttackRelease(t){this.instrumentIndex++,console.log("triggerAttackRelease",this.instrumentIndex,t.getName(),t.getTime(),t.delay,(t.delay+t.toSeconds())*1e3),window.setTimeout(()=>{console.log("fertig"),this.instrumentIndex--},(t.delay+t.toSeconds())*1e3);const n=t.getName(),s=t.getTime();if(!n)throw new Error("Note name is required");if(!s)throw new Error("Note time is required");this.getInstrument().triggerAttackRelease(n,s,t.delay)}getInstrument(){return this.instrumentIndex>this.instruments.length-1&&this.instruments.push(I(this.track.type)),this.instruments[this.instrumentIndex]}createSequence(t,n){if(!this.currentSequence)this.currentSequence=R(new it(t,(s,a,c,m)=>{console.log(s),this.triggerAttackRelease(s),this.sequenceNoteIndex={...this.sequenceNoteIndex,[Number(a)]:m[c].index},c===m.length-1&&Reflect.deleteProperty(this.sequenceNoteIndex,a)},n!==void 0?n:void 0));else throw new Error("TrackPlayer already has a sequence")}clearSequence(){var t;(t=this.currentSequence)==null||t.dispose(),this.currentSequence=void 0}}class it{constructor(t,n,s){u(this,"startTime",0);u(this,"sequenceMap",new Map);u(this,"onTick");u(this,"onComplete");u(this,"notes");this.onTick=n,this.onComplete=s,this.notes=t}async start(t=0){var c;const n=C;n.stop(),n.seconds=0,n.start(),this.startTime=H();const s=this.sequenceMap,a=Promise.all(Object.entries(ot(this.notes)).map(([,m])=>{const y=m.map((l,e)=>{const i=`${e}_${l.getTime()}`,{notes:f,part:S,complete:d}=s.get(i)||(()=>{const T=[];let E=0;const g=new F,w=new M((...A)=>{this.onTick(new U({delay:A[0],note:A[1],time:l.getTime()}),e,E,T),E++,E>w.length-1&&g.resolve()},[]);return{notes:T,part:w,complete:g.promise}})();return s.set(i,{notes:f,part:S,complete:d}),S.add(l.delay,l.getName()),f.push(l),{notes:f,part:S,complete:d}});return Promise.all(y.map(({complete:l})=>l))}));return Array.from(s.values()).forEach(({part:m})=>{m.start(t)}),await a,(c=this.onComplete)==null||c.call(this),a}pause(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.pause()})}cancel(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.cancel()})}stop(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.stop()})}dispose(){Array.from(this.sequenceMap.values()).forEach(({part:t})=>{t.dispose()})}}function I(r){const t=at(r),n=new j(-100).toDestination(),s=new t().connect(n).toDestination();return R(s)}function ot(r){return r.reduce((t,n)=>(t[n.delay]=t[n.delay]||[],t[n.delay].push(n),t),{})}const rt={class:"wb-disks-debug-synthesizer-info"},ct=X({__name:"Info",setup(r){const t=x(["# Synthesizer","Simple synthesizer with notes view and midi api support.","",`Version: **0.1**  
Created by **Thorn-Welf Walli**`,"","Thanks to:","- [Tone.js](https://tonejs.github.io/)","- [WEBMIDI.js](https://webmidijs.org/)"].join(`
`));return(n,s)=>(W(),J("div",rt,[v(st,{content:t.value},null,8,["content"])]))}}),lt=Q(ct,[["__scopeId","data-v-0dc90f0c"]]),gt=tt(({core:r,mainWindow:t,parentWindow:n,preserveContextMenu:s,model:a,trackModel:c})=>{function m(){return(n||t).close()}const y=a[h.SYNTHESIZER_PROJECT],l=c&&c[h.SYNTHESIZER_TRACK];return[{title:"Synthesizer",items:[{hotKey:"I",keyCode:73,title:"Info",async action(){if(!r.modules.windows)throw new Error("Windows module not found");s(!0),await r.modules.windows.addWindow({component:lt,componentData:{model:a},options:{title:"Info",prompt:!1,scaleX:!1,scaleY:!1,scrollX:!1,scrollY:!1}},{group:"extras13Synthesizer"}).awaitClose(),s(!1),t.focus()}},{type:o.SEPARATOR},{title:"Debug",items:[{title:"Notes",async action(){var e;if((e=a.actions)!=null&&e.openDebugNotes){s(!0);const{window:i}=a.actions.openDebugNotes();await i.awaitClose(),s(!1),t.focus()}}},{title:"Midi",async action(){var e;if((e=a.actions)!=null&&e.openDebugMidi){s(!0);const{window:i}=a.actions.openDebugMidi();await i.awaitClose(),s(!1),t.focus()}}},{title:"Timeline",async action(){var e;if((e=a.actions)!=null&&e.openDebugTimeline){s(!0);const{window:i}=a.actions.openDebugTimeline();await i.awaitClose(),s(!1),t.focus()}}}]},{type:o.SEPARATOR},{title:"Close",action:m}]},...c?[]:[{title:"Project",items:[{title:"New…",action:async()=>{a.actions&&(s(!0),await a.actions.newProject(),s(!1),t.focus())}},{title:"Edit Name…",action:async()=>{s(!0);const e=await N(r,"Project renaming:",y.name);e&&(y.name=e),s(!1),t.focus()}},{title:"Open…",hotKey:"O",keyCode:79,action:async()=>{var e;await((e=a.actions)==null?void 0:e.openProject())}},{title:"Save…",hotKey:"S",keyCode:83,action:async()=>{var e;return await((e=a.actions)==null?void 0:e.saveProject())}},{type:o.SEPARATOR},{title:"Import… (JSON)",hotKey:"S",keyCode:83,type:o.UPLOAD,async action(e){var i;return await((i=a.actions)==null?void 0:i.importProject(e[0]))}},{title:"Export (JSON)",action:async()=>{var e;return await((e=a.actions)==null?void 0:e.exportProject())}}]},{title:"Track",items:[{title:"New…",action:async()=>{a.actions&&(s(!0),await a.actions.newTrack(),s(!1),t.focus())}},{type:o.SEPARATOR},{title:"Clear",async action(){a.actions&&(s(!0),await a.actions.clearTracks(),s(!1),t.focus())}}]}],...c&&[{title:"Track Options",items:[{type:o.CHECKBOX,title:"Show Note Labels",name:h.SYNTHESIZER_TRACK_SHOW_NOTE_LABELS,model:c},{type:o.CHECKBOX,title:"Show Keyboard",name:h.SYNTHESIZER_TRACK_SHOW_KEYBOARD,model:c},{type:o.DEFAULT,title:"Keyboard Size",items:Object.entries($).map(([e,i])=>({type:o.RADIO,title:i,model:c,name:h.SYNTHESIZER_TRACK_KEYBOARD_SIZE,value:e}))},{type:o.DEFAULT,title:"Keyboard Alignment",items:Object.entries(G).map(([e,i])=>({type:o.RADIO,title:i,model:c,name:h.SYNTHESIZER_TRACK_KEYBOARD_ALIGN,value:e}))},{type:o.SEPARATOR},{title:"Edit Name…",action:async()=>{s(!0);const e=await N(r,"Track renaming:",l.name);e&&(l.name=e,t.options.title=l.name),s(!1),t.focus()}},{type:o.DEFAULT,title:"Note Count",items:Object.entries(V).map(([e,i])=>({type:o.RADIO,title:`${e} (${i})`,model:l,name:"noteCount",value:i}))},{type:o.DEFAULT,title:"Base Note",items:Object.entries(z()).map(([e,i])=>({type:o.RADIO,title:e,model:l,name:"baseNote",value:i}))},{type:o.SEPARATOR},{type:o.DEFAULT,title:"Beat Count",items:Array(9).fill({}).map((e,i)=>({type:o.RADIO,title:String(i+1),model:l,name:"beatCount",value:i+1}))}]}]||[],{title:"Options",items:[{type:o.DEFAULT,title:`BPM (${a[h.SYNTHESIZER_BPM]})`,items:[30,60,120,240,480].map(e=>({type:o.RADIO,title:String(e),model:a,name:h.SYNTHESIZER_BPM,value:e}))}]},...et({core:r})].filter(Boolean)});export{Tt as T,gt as c};
