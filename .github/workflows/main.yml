name: Main
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Install
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Test
        run: pnpm run test
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_URL: ${{ secrets.FIREBASE_URL }}
          TEST_DATABASE_USER_EMAIL: ${{ secrets.TEST_DATABASE_USER_EMAIL }}
          TEST_DATABASE_USER_PASSWORD: ${{ secrets.TEST_DATABASE_USER_PASSWORD }}

  build-firebase:
    name: Build (Firebase)
    needs: install
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
        env:
          HUSKY: 0

      - name: Versioning
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUSKY: 0
        run: |
          npx -p semantic-release -p @semantic-release/git -p @semantic-release/changelog -p @semantic-release/exec -p @semantic-release/github semantic-release --debug=true

      - name: Build
        run: |
          pnpm run --filter=app generate
          cp firebase.json ./packages/app/.output/public/firebase.json
          cp .firebaserc ./packages/app/.output/public/.firebaserc
        env:
          WEBSITE_HOST: https://lammpee.de
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_URL: ${{ secrets.FIREBASE_URL }}

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: ./packages/app/.output/public

  deploy-firebase:
    name: Deploy (Firebase)
    needs: build-firebase
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: public
      - name: Deploy to Firebase
        uses: docker://w9jds/firebase-action:master
        with:
          args: deploy --only hosting
        env:
          PROJECT_PATH: public
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
