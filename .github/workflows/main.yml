name: Build and Deploy
on:
  push:
    branches:
      - master

jobs:
  Cache:
    name: Prepare Cache
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [10, 12]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout Repo
        uses: actions/checkout@master

      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm ci

  Test:
    needs: ['cache']
    steps:
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      - name: Test
        run: npm run test

  Build:
    needs: ['test']
    steps:
      - name: cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}

      # Github Pages
      - name: Build (GH-Pages)
        run: |
          mkdir -p dists/ghpages
          npm run static
          touch dists/ghpages/.nojekyll
        env:
          BASE_PATH: /web-workbench/
          DIST_PATH: dists/ghpages
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_URL: ${{ secrets.FIREBASE_URL }}

      # Firebase
      - name: Build (Firebase)
        run: |
          mkdir -p dists/firebase
          npm run static
          cp firebase.json dists/firebase/firebase.json
          cp .firebaserc dists/firebase/.firebaserc
        env:
          DIST_PATH: dists/firebase
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_URL: ${{ secrets.FIREBASE_URL }}
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dists
          path: dists


  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dists
          path: dists
      - name: Deploy to GH-Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dists/ghpages
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          PROJECT_PATH: dists/firebase
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
